# apiVersion: v1
# added to test deployment of the serviceaccount for the purpose of keycloak kube-ping
# kind: ServiceAccount
# metadata:
#   name: jgroups-kubeping-service-account
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRole
# metadata:
#   name: jgroups-kubeping-pod-reader
# rules:
# - apiGroups: [""]
#   resources: ["pods"]
#   verbs: ["get", "list"]
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRoleBinding
# metadata:
#   name: jgroups-kubeping-api-access
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: ClusterRole
#   name: jgroups-kubeping-pod-reader
# subjects:
# - kind: ServiceAccount
#   name: jgroups-kubeping-service-account
#   namespace: fbdev
# ---
apiVersion: apps/v1
kind: Deployment
metadata:
 labels:
   app.kubernetes.io/name: hello-world
 name: hello-world-dev
# namespace: fbtest
spec:
 replicas: 1
 selector:
   matchLabels:
     app.kubernetes.io/name: hello-world
 template:
   metadata:
     labels:
       app.kubernetes.io/name: hello-world
       app: hello-world
       version: v1
     annotations:
       sidecar.istio.io/inject: 'true'
   spec:
     containers:
     - image: gcr.io/google-samples/hello-app:2.0
       name: hello-world
       ports:
       - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: hello-world
  name: hello-world
  namespace: fb-dev
spec:
  ports:
  - name: http-world
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: hello-world
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: helloworld-dev
  namespace: istio-system
spec:
  host: helloworld-route-dev-istio-system.apps-crc.testing
  to:
    kind: Service
    name: test-istio-ingressgateway
    weight: 100
  port:
    targetPort: http2
  wildcardPolicy: None
